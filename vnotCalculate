function vnot = vnotCalculate(starting)
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% ENGR 132 
% Program Description
%replace this text with your program description as a comment
%
% Function Call
%replace this text with a comment that states the function call
%
% Input Arguments
%replace this text with a commented list of the input arguments
%
% Output Arguments
%replace this text with a commented list of the output arguments
%
% Assignment Information
%   Assignment:     M2, Problem 1
%   Team members:   Sofia Loucks, louckss@purdue.edu [repeat for each person]
%                   Allison Womer, awomer@purdue.edu
%                   Einar Pederson, ecpeders@purdue.edu
%                   Katherine Sarafin, ksarafin@purdue.edu
%   Team ID:        009-24
%   Academic Integrity:
%     [] We worked with one or more peers but our collaboration
%        maintained academic integrity.
%     Peers we worked with: 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%% ____________________
%% INITIALIZATION

% for each 10 values in the dataset
collection = zeros(10);
ending = starting + 10;

%importing data
all_data = readmatrix('Data_nextGen_KEtesting_allresults.csv');
data_starting = all_data(:,starting);
data_ending = all_data(:,starting+10);

%% ____________________
%% CALCULATIONS

% look at each testing iteration
for j = starting:ending
    % give a slope variable
    basis = 10; % this is the placement of the value to check to.
    slope = zeros(basis);
    % find the slope between the two different datapoints
    original_data = nonzeros(data_starting);
    duplicate_data = nonzeros(data_ending);
    % smooth the data before processing
    original_smooth = smooth(original_data(:));
    duplicate_smooth = smooth(duplicate_data(:));
    % find the slope for each 
    for i = 2:basis
        % find the midpoint between the two datasets
        difference_first = (original_smooth(i) - duplicate_smooth(i));
        % find t
        difference_second = (original_smooth(i+1) - duplicate_smooth(i+1));
        % find the slope
        slope(i-1) = abs(difference_second - difference_first);
    end
    
    % save the function
    collection(j) = mean(slope,'all');
    
end

vnot = mean(nonzeros(collection));

end

%% ____________________
%% FORMATTED TEXT/FIGURE DISPLAYS


%% ____________________
%% RESULTS


%% ____________________
%% ACADEMIC INTEGRITY STATEMENT
% We have not used source code obtained from any other unauthorized
% source, either modified or unmodified. Neither have we provided
% access to my code to another. The program we are submitting
% is our own original work.
